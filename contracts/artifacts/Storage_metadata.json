{
	"compiler": {
		"version": "0.8.22+commit.4fc1097e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "title",
						"type": "string"
					}
				],
				"name": "NewEvent",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint40",
						"name": "id",
						"type": "uint40"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"name": "NewProfile",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint40",
						"name": "playerId",
						"type": "uint40"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "eventId",
						"type": "uint256"
					}
				],
				"name": "PlayerJoined",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "currentEvents",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "title",
								"type": "string"
							},
							{
								"internalType": "uint40",
								"name": "hostId",
								"type": "uint40"
							},
							{
								"internalType": "uint40",
								"name": "capacity",
								"type": "uint40"
							},
							{
								"internalType": "uint40[]",
								"name": "profilesIds",
								"type": "uint40[]"
							}
						],
						"internalType": "struct Storage.Event[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "currentProfiles",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint40",
								"name": "id",
								"type": "uint40"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "hostRep",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "participationRep",
								"type": "uint256"
							},
							{
								"internalType": "bytes32",
								"name": "key",
								"type": "bytes32"
							}
						],
						"internalType": "struct Storage.Profile[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isOwner",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "joinEvent",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "title",
						"type": "string"
					},
					{
						"internalType": "uint40",
						"name": "capacity",
						"type": "uint40"
					}
				],
				"name": "newEvent",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "ownerToProfile",
				"outputs": [
					{
						"internalType": "uint40",
						"name": "",
						"type": "uint40"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"custom:dev-run-script": "./scripts/deploy_with_ethers.ts",
			"details": "Store & retrieve value in a variable",
			"kind": "dev",
			"methods": {
				"isOwner()": {
					"returns": {
						"_0": "true if `msg.sender` is the owner of the contract."
					}
				},
				"owner()": {
					"returns": {
						"_0": "the address of the owner."
					}
				},
				"renounceOwnership()": {
					"details": "Allows the current owner to relinquish control of the contract."
				},
				"transferOwnership(address)": {
					"details": "Allows the current owner to transfer control of the contract to a newOwner.",
					"params": {
						"newOwner": "The address to transfer ownership to."
					}
				}
			},
			"title": "Storage",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"constructor": {
					"notice": "Constructor to add 1 dummy profile & 1 dummy event"
				},
				"currentProfiles()": {
					"notice": "List all profiles. Owner only"
				},
				"newEvent(string,uint40)": {
					"notice": "Room Stuff. room is made, room is closed, list all open rooms."
				},
				"renounceOwnership()": {
					"notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/1_Storage.sol": "Storage"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/1_Storage.sol": {
			"keccak256": "0x2b7a886d9e2600fe70d16b2e7c67bd2f9a5a6c12a21c3ebb8bb1519701963bd4",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://a72a8afd4d28f2e627691371d24ac44df9dab48f8a47d771bb735a1bc414f6c5",
				"dweb:/ipfs/QmbMM5CQ2BzTXZJnFWPxH4LLMR9jverKcZM3SmmUuAr4RB"
			]
		},
		"contracts/ownable.sol": {
			"keccak256": "0x64092c3493835329cb647645382559a480601b776886cdeb5621a082e62c2b26",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://3c624740eb13ff497ddcb3f96574555e1edf6f483a11883620fbbfb718037c59",
				"dweb:/ipfs/QmVN2C2Gvk9JL3jnw2rB2mLadMuwdfvFWUPc6EHLsENDsu"
			]
		}
	},
	"version": 1
}